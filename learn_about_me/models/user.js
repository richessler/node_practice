// Generated by CoffeeScript 1.10.0
(function() {
  var SALT_FACTOR, User, bcrypt, mongoose, noop, userSchema;

  mongoose = require('mongoose');

  bcrypt = require('bcrypt-nodejs');

  SALT_FACTOR = 10;

  noop = function() {};

  userSchema = mongoose.Schema({
    username: {
      type: String,
      required: true,
      unique: true
    },
    password: {
      type: String,
      required: true
    },
    createdAt: {
      type: Date,
      defaulte: Date.now
    },
    displayName: String,
    bio: String
  });

  userSchema.pre('save', function(done) {
    var user;
    user = this;
    if (!user.isModified('password')) {
      return done();
    }
    return bcrypt.genSalt(SALT_FACTOR, function(err, salt) {
      if (err) {
        return done(err);
      }
      return bcrypt.hash(user.password, salt, noop, function(err, hashedPassword) {
        if (err) {
          return done(errr);
        }
        user.password = hashedPassword;
        return done();
      });
    });
  });

  userSchema.methods.checkPassword = function(guess, done) {
    return bcrypt.compare(guess, this.password, function(err, isMatch) {
      return done(err, isMatch);
    });
  };

  userSchema.methods.name = function() {
    return this.displayName || this.userName;
  };

  User = mongoose.model('User', userSchema);

  module.exports = User;

}).call(this);

//# sourceMappingURL=user.js.map
